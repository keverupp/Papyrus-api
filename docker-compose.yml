version: '3.8'

services:
  # ========== API PAPYRUS ==========
  papyrus-api:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        NODE_VERSION: ${NODE_VERSION:-18-alpine}
    container_name: papyrus-api
    restart: unless-stopped
    env_file:
      - .env
    environment:
      # Sobrescreve apenas se necessário (o .env já tem tudo)
      NODE_ENV: ${NODE_ENV:-production}
      PORT: ${PORT:-4000}
      HOST: ${HOST:-0.0.0.0}
      
    volumes:
      - papyrus_pdf_cache:/app/cache
      - papyrus_logs:/app/logs
      - papyrus_uploads:/app/uploads
      - papyrus_templates:/app/custom-templates

    ports:
      - "${PAPYRUS_API_PORT:-4000}:4000"

    networks:
      - papyrus-network
      
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
      
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    
    # Labels para Portainer webhook
    labels:
      - "com.centurylinklabs.watchtower.enable=true"
      - "portainer.webhook=true"
      - "papyrus.version=${PAPYRUS_VERSION:-latest}"

# ========== VOLUMES ==========
volumes:
  papyrus_pdf_cache:
    driver: local
  papyrus_logs:
    driver: local
  papyrus_uploads:
    driver: local
  papyrus_templates:
    driver: local

# ========== NETWORKS ==========
networks:
  papyrus-network:
    driver: bridge